# 2.1.3 空のターゲット
#
# ## どんなときに空のターゲットを使うか
#
# ・そのコマンドは、ファイルを作成することはないが、常に実行したいわけでもない
# ・そのコマンドに依存しているものを更新したくない
#
#
# ## どうやって使うか
#
# ```
# prog: size prog.o
#     $(CC) $(LDFLAGS) -o $@ $^
#
# size: prog.o
#     size $^
#     touch size
# ```
#
# ・sizeターゲットはprog.oが更新されたときに実行される
#   - sizeターゲットに対して、prog.oが必須項目なので、以下の手順で更新時間の比較が行われる
#     -  1. sizeというファイルがあるか -> ある
#     -  2. 必須項目は何か -> prog.o
#     -  3. 必須項目はターゲットよりも新しいか -> 新しい（とする）
#     -  4. コマンドが実行される -> size表示と size ファイルの作成
#     -  *. 今後、prog.o が更新されなければ、sizeは実行されない
#     -  * progの必須項目にsizeが指定してあっても、prog.oが更新されない限り、progは再構築されない
#            - ここが擬似ターゲットと違うところ
#            - 擬似ターゲットだったら、毎回progは再構築されてしまう
#
# ## $?と組み合わせるとさらに役立つ
#
# $? : ターゲットよりも新しく更新された必須項目をスペース区切で列挙する
#
# 前回印刷してから、更新があったものだけを全て印刷するmakeルール
#
# ```
# print: *.[hc]      # ワイルドカード: 拡張子 .c or .h のファイル全てが必須項目
#     lpr $?         # ターゲットよりも新しいファイルを印刷
#     touch $@       # $@ : ターゲット
#
#
#
# 総じて、空のファイルは何らかのイベントが起きたことを印として残す
# ファイルが更新された場合だけテストする、とかの使い方もできる
