# 2.4.2 静的パターンルール
#
# ## 静的パターンルールとは
#
# ・パターンルールの限定版
# ・ターゲットパターンの前に、ターゲットのリストを置く

OBJECTS = foo.o bar.o

$(OBJECTS): %.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@

# ・$(OBJECTS)の部分に、今回の対象のターゲットのリストを置く
# ・そのリスト内のターゲットに対して、パターンルールが適用される
# ・類似のターゲットをまとめる役割？
#
#
# ## シンタックスシュガー
#
# ・おそらく、上の表記は、下記と同じっぽい
#
# ```
# foo.o: foo.c
#	$(CC) -c $(CFLAGS) $< -o $@
#
# bar.o: bar.c
#	$(CC) -c $(CFLAGS) $< -o $@
# ```
#
# ・なぜなら、上記のMakefileでmakeをした場合
#
# ```
# $ make
# cc -c  foo.c -o foo.o
# ```
#
# ・foo.oしか実行されなかった
# ・makeは何もコマンドラインに指定しない場合、最初のターゲットを実行する
# ・このルールに則ると、上記のシンタックスシュガーが説明できる
# ・つまり、下記の１行を追加し、make all とすると全て実行できる

all: $(OBJECTS)

# ・実行結果
#
# ```
#  $ make all
#  cc -c  foo.c -o foo.o
#  cc -c  bar.c -o bar.o
# ```
#

.PHONY: clean
clean:
	rm *.o
