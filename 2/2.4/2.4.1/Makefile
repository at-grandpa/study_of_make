# 2.4.1 パターン
#
# ## パターン
#
# ・「%」はUNIXシェルの「*」とほぼ同じで、あらゆる文字列を表す
# ・パターン中、どこでも使えるが、１度しか使えない
# ・例：
#     %,v
#     s%.o
#     wrapper_%
# ・%の前をプリフィックス、後をサフィックスという
# ・makeがまず着目するのは、パターンルールに合致するターゲット
# ・パターン合致で、%部分を「本体」として取り出す
# ・本体を必須項目に適用する
# ・適用された必須項目に対して、ファイルの検索とルールの検索が行われる
# ・本体部分は少なくとも１文字以上でなければならない
#
#
# ## %だけのパターン例
#
# ```
# %: %.mod
#     $(COMPILE.mod) -o $@ -e $@ $^
#
# %: %.cpp
#     $(LINK.cpp) $^ $(LOADLIBS) $(LDLIBS) -o $@
#
# %: %.sh
#     cat $< > $@
#     chmod a+x $@
# ```
#
